name: Release Workflow

env:
  renpy_version: "8.2.1"
  itch_project_name: akibaokapi/after-passion-sfw
  build_name: AfterPassion
  android_build_name: games.akiba.afterpassion

on:
  push:
    tags:
      - v*

jobs:
  build:
    name: Build Automation
    runs-on: ubuntu-latest
    steps:
      - name: Get release version
        id: get-release-version
        run: |
          version=$(echo ${{github.ref_name}} | cut -c 2-)
          echo "version=$version" >> "$GITHUB_OUTPUT"
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v3
        with:
          distribution: 'adopt'
          java-version: '21'
      - name: Cache renpy
        id: cache-renpy
        uses: actions/cache@v3
        env:
          cache-name: cache-renpy
        with:
          path: |
            ~/.renutil
            !~/.renutil/**/*.keystore
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('renconstruct.toml') }}
      - name: Build
        run: |
          unset ANDROID_NDK_HOME
          curl --proto '=https' --tlsv1.2 -LsSf https://github.com/kobaltcore/renkit/releases/download/v4.0.1/renkit-installer.sh | sh
          export PATH=~/.cargo/bin:$PATH
          [ ! -d ~/.renutil ] && renutil install ${{ env.renpy_version }}
          mkdir -p ~/.renutil/${{ env.renpy_version }}/rapt/project/app/
          sed -i 's#{key_apk}#${{ secrets.ANDROID_KEYSTORE }}#' renconstruct.toml
          echo "define config.version = \"${{ steps.get-release-version.outputs.version }}\"" >> game/options.rpy
          renconstruct build -c renconstruct.toml . .artifacts/
      - name: Set up butler
        uses: jdno/setup-butler@v1
      - name: Publish builds to itch.io
        run: |
          ls -l .artifacts
          butler push .artifacts/${{ env.build_name }}-${{ steps.get-release-version.outputs.version }}-win.zip ${{ env.itch_project_name }}:win --userversion ${{ steps.get-release-version.outputs.version }}
          sleep 30
          butler push .artifacts/${{ env.build_name }}-${{ steps.get-release-version.outputs.version }}-linux.tar.bz2 ${{ env.itch_project_name }}:linux --userversion ${{ steps.get-release-version.outputs.version }}
          sleep 30
          butler push .artifacts/${{ env.build_name }}-${{ steps.get-release-version.outputs.version }}-mac.zip ${{ env.itch_project_name }}:mac --userversion ${{ steps.get-release-version.outputs.version }}
          sleep 30
          apk_path=`find ./.artifacts -name "${{ env.android_build_name }}*.apk"`
          butler push $apk_path ${{ env.itch_project_name }}:android --userversion ${{ steps.get-release-version.outputs.version }}
        env:
          BUTLER_API_KEY: ${{ secrets.ITCHIO_API_KEY }}
